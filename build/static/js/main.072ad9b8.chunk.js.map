{"version":3,"sources":["components/Wheel.js","config.js","components/SpinWheel.js","components/buyspins/ChooseSpinsForm.js","components/buyspins/ReviewOrder.js","components/BuySpins.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","wheel","width","paddingTop","borderRadius","background","transition","arrow","height","borderLeft","borderRight","borderTop","palette","grey","left","transform","zIndex","Wheel","_ref","rotation","classes","react_default","a","createElement","className","style","concat","NUM_PRIZES","MIN_ROTATE_ANGLE","ROTATION_OFFSET","SPIN_COST","PRIZE_INDEX_MAP","STARTING_SPINS","getNewRotation","prevRotation","prizeIndex","prizePosAngle","normalizedRotateAngle","console","log","@keyframes pulse","from","backgroundColor","primary","light","to","secondary","overflow","btn","top","SpinWheel","props","_useState","useState","_useState2","Object","slicedToArray","isSpinning","setIsSpinning","_useState3","_useState4","crntRotation","setRotation","onWinPrize","onSpin","enabled","handleSpinBtnClick","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","Math","floor","random","Promise","resolve","reject","setTimeout","stop","_x","apply","this","arguments","Button","variant","color","size","disabled","onClick","formGroup","display","alignItems","justifyContent","& > *","margin","formSection","marginBottom","spacing","ChooseSpinsForm","tooltipOpen","setTooltipOpen","spinsToBuy","setSpinsToBuy","Fragment","Typography","gutterBottom","IconButton","aria-label","Number","isInteger","RemoveCircle_default","Tooltip","open","title","TextField","id","onChange","value","target","parseInt","required","spinsField","AddCircle_default","align","toFixed","ReviewOrder","steps","content","minHeight","buttons","button","marginTop","marginLeft","BuySpins","activeStep","setActiveStep","setNumSpinsOwned","closeDrawer","Container","component","length","Error","getStepContent","SnackbarTransition","Slide","assign","direction","paperVert","flexDirection","paperHoriz","numSpins","flexGrow","Boolean","window","location","hostname","match","ReactDOM","render","prizeList","setPrizeList","setNumSpins","_useState5","_useState6","snackbarOpen","setSnackbarOpen","_useState7","_useState8","snackbarMsg","setSnackbarMsg","_useState9","_useState10","drawerOpen","setDrawerOpen","handleClose","event","reason","CssBaseline","AppBar","Toolbar","edge","AddShoppingCart_default","fontSize","maxWidth","result","toConsumableArray","Snackbar","autoHideDuration","onClose","TransitionComponent","ContentProps","aria-describedby","message","action","key","close","Close_default","Drawer","anchor","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.072ad9b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  wheel: {\r\n    width: \"100%\",\r\n    paddingTop: \"100%\",\r\n    borderRadius: \"50%\",\r\n    background: `conic-gradient(\r\n      lime 20%, \r\n      yellow 0 40%, \r\n      red 40% 60%, \r\n      blue 60% 80%, \r\n      orange 80%\r\n    )`,\r\n    transition: \"transform 3s\"\r\n  },\r\n  arrow: {\r\n    position: \"absolute\",\r\n    width: 0,\r\n    height: 0,\r\n    borderLeft: \"30px solid transparent\",\r\n    borderRight: \"30px solid transparent\",\r\n    borderTop: \"50px solid \" + theme.palette.grey[\"300\"],\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    zIndex: \"10\"\r\n  }\r\n}));\r\n\r\nexport default function Wheel({ rotation }) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}> \r\n      <div className={classes.arrow} />\r\n      <div\r\n        className={classes.wheel}\r\n        style={{ transform: `rotate(${rotation}deg)` }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","//set of constants for use in this project \r\nexport const SPIN_DURATION = 1000; //in milliseconds\r\nexport const NUM_PRIZES = 5;\r\nexport const MIN_ROTATE_ANGLE = 1080; //360 * 3\r\nexport const ROTATION_OFFSET = -((360 / NUM_PRIZES) / 2);\r\nexport const SPIN_COST = 2; //in dollars\r\nexport const PRIZE_INDEX_MAP = [\r\n  'lime', \r\n  'orange',\r\n  'blue',\r\n  'red',\r\n  'yellow'\r\n];\r\nexport const STARTING_SPINS = 10;","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Wheel from \"./Wheel\";\r\nimport {\r\n  NUM_PRIZES,\r\n  MIN_ROTATE_ANGLE,\r\n  ROTATION_OFFSET,\r\n} from '../config';\r\n\r\nfunction getRandomPrizeIndex() {\r\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\r\n  return Math.floor(Math.random() * Math.floor(NUM_PRIZES));\r\n}\r\n\r\nfunction getNewRotation(prevRotation, prizeIndex) {\r\n  //if wheel was at pos 0, this is how much we would\r\n  //need to rotate the wheel by to make the new\r\n  //prize's position at the top\r\n  const prizePosAngle = (prizeIndex / NUM_PRIZES) * 360;\r\n  const normalizedRotateAngle = prevRotation % 360;\r\n  let degreesToRotate;\r\n  if (normalizedRotateAngle > prizePosAngle) {\r\n    degreesToRotate = prizePosAngle + 360 - normalizedRotateAngle;\r\n  } else {\r\n    degreesToRotate = prizePosAngle - normalizedRotateAngle;\r\n  }\r\n  return prevRotation + MIN_ROTATE_ANGLE + \r\n    degreesToRotate + ROTATION_OFFSET;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  console.log(theme);\r\n  \r\n  return {\r\n  '@keyframes pulse': {\r\n    from: {backgroundColor: theme.palette.primary.light},\r\n    to: {backgroundColor: theme.palette.secondary.light}\r\n  },\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    overflow: 'hidden'\r\n  },\r\n  btn : {\r\n    // margin: theme.spacing(2)\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: '50%',\r\n    width: '25%',\r\n    height: '25%'\r\n  }\r\n};\r\n});\r\n\r\n\r\nexport default function SpinWheel(props) {\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n  const [crntRotation, setRotation] = useState(0);\r\n\r\n  const { onWinPrize, onSpin, enabled } = props;\r\n\r\n  const handleSpinBtnClick = async e => {\r\n    onSpin();\r\n    e.preventDefault();\r\n    const prizeIndex = getRandomPrizeIndex();\r\n    setIsSpinning(true);\r\n    setRotation(getNewRotation(crntRotation, prizeIndex));\r\n    await new Promise((resolve, reject) => {\r\n      setTimeout(() => { resolve(); }, 3000); \r\n    });\r\n    onWinPrize(prizeIndex);\r\n    setIsSpinning(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Wheel rotation={crntRotation} />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        size=\"large\"\r\n        className={classes.btn}\r\n        disabled={isSpinning || !enabled}\r\n        onClick={handleSpinBtnClick}\r\n      >\r\n        SPIN\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { SPIN_COST } from \"../../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    '& > *': {\r\n      margin: '0 5px'\r\n    }\r\n  },\r\n  formSection: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default function ChooseSpinsForm(props) {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const { spinsToBuy, setSpinsToBuy } = props;\r\n\r\n  const handleInputChange = e => {\r\n    const value =\r\n      e.target.value === \"\" ? e.target.value : parseInt(e.target.value, 10);\r\n\r\n    if (value === \"\" || (Number.isInteger(value) && value >= 0)) {\r\n      setSpinsToBuy(value);\r\n      setTooltipOpen(false);\r\n    } else {\r\n      setTooltipOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleIncreaseSpinCnt = e => {\r\n    if (Number.isInteger(spinsToBuy)) {\r\n      setSpinsToBuy(spinsToBuy + 1);\r\n    } else {\r\n      setSpinsToBuy(1);\r\n    }\r\n  };\r\n\r\n  const handleDecreaseSpinCnt = e => {\r\n    if (Number.isInteger(spinsToBuy) && spinsToBuy > 0) {\r\n      setSpinsToBuy(spinsToBuy - 1);\r\n    } else {\r\n      setSpinsToBuy(0);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Spins\r\n      </Typography>\r\n      <div className={classes.formSection}>\r\n        <div className={classes.formGroup}>\r\n          <IconButton\r\n            aria-label=\"Delete\"\r\n            size=\"small\"\r\n            onClick={handleDecreaseSpinCnt}\r\n          >\r\n            <RemoveCircleIcon />\r\n          </IconButton>\r\n\r\n          <Tooltip open={tooltipOpen} title=\"Please enter a valid number\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              id=\"spinsToBuy\"\r\n              onChange={handleInputChange}\r\n              value={spinsToBuy}\r\n              required\r\n              className={classes.spinsField}\r\n            />\r\n          </Tooltip>\r\n          <IconButton\r\n            aria-label=\"Delete\"\r\n            size=\"small\"\r\n            onClick={handleIncreaseSpinCnt}\r\n          >\r\n            <AddCircleIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Typography variant=\"body2\" align=\"center\">\r\n          Price: $2.00 per Spin\r\n        </Typography>\r\n      </div>\r\n      <Typography\r\n        variant=\"h6\"\r\n        gutterBottom\r\n      >\r\n        Purchase Details\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\">\r\n          Total: ${(spinsToBuy * SPIN_COST).toFixed(2)}\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { SPIN_COST } from \"../../config\";\r\n\r\nexport default function ReviewOrder(props) {\r\n  const { spinsToBuy } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\">Confirm your order</Typography>\r\n      <Typography variant=\"body1\">Quantity: {spinsToBuy} Spins</Typography>\r\n      <Typography variant=\"body1\">\r\n        Cost: ${(spinsToBuy * SPIN_COST).toFixed(2)}\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ChooseSpinsForm from \"./buyspins/ChooseSpinsForm\";\r\nimport ReviewOrder from \"./buyspins/ReviewOrder\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n//was originally going to use a Stepper, but did not yet\r\n//will keep this in for the future possiblity of using one\r\nconst steps = [\"Choose Number of Spins\", \"Review Order\"];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"250px\"\r\n  },\r\n  content: {\r\n    minHeight: \"210px\"\r\n  },\r\n  buttons: {\r\n    margin: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function BuySpins(props) {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [spinsToBuy, setSpinsToBuy] = useState(0);\r\n\r\n  const { setNumSpinsOwned, closeDrawer } = props;\r\n\r\n  const handleNextClick = () => {\r\n    if (activeStep === 1) {\r\n      setNumSpinsOwned(spinsToBuy);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const getStepContent = activeStep => {\r\n    switch (activeStep) {\r\n      case 0:\r\n        return (\r\n          <ChooseSpinsForm\r\n            spinsToBuy={spinsToBuy}\r\n            setSpinsToBuy={setSpinsToBuy}\r\n          />\r\n        );\r\n      case 1:\r\n        return <ReviewOrder spinsToBuy={spinsToBuy} />;\r\n      default:\r\n        throw new Error(\"no such active state\");\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Typography variant=\"h5\" component=\"h1\" align=\"center\" gutterBottom>\r\n        Buy Spins\r\n      </Typography>\r\n      {activeStep === steps.length ? (\r\n        <React.Fragment>\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Success\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.buttons}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={closeDrawer}>\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className={classes.content}>{getStepContent(activeStep)}</div>\r\n          <div className={classes.buttons}>\r\n            {activeStep !== 0 && (\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handlePrevClick}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleNextClick}\r\n              className={classes.button}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Typography } from \"@material-ui/core\";\nimport SpinWheel from \"./components/SpinWheel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport BuySpins from \"./components/BuySpins\";\nimport { \n  PRIZE_INDEX_MAP,\n  STARTING_SPINS\n } from \"./config\";\n\nconst SnackbarTransition = props => <Slide {...props} direction=\"up\" />;\n\nconst useStyles = makeStyles(theme => ({\n  paperVert: {\n    margin: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  paperHoriz: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: theme.spacing(3),\n  },\n  button: {\n    // margin: theme.spacing(1),\n  },\n  numSpins: {\n    margin: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function App(props) {\n  //option for user to see list of prizes won is setup, \n  //but not yet used in this implementation - maybe in \n  //the future\n  const [prizeList, setPrizeList] = useState([]);\n  const [numSpins, setNumSpins] = useState(STARTING_SPINS);\n  const [snackbarOpen, setSnackbarOpen] = \n    useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState('');\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleWinPrize = prizeIndex => {\n    const result = [prizeIndex, ...prizeList];\n    setPrizeList(result);\n    setSnackbarMsg(`You won prize ${PRIZE_INDEX_MAP[prizeIndex]}!`);\n    setSnackbarOpen(true);\n  };\n\n  const toggleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const closeDrawer = () => {\n    setDrawerOpen(false);\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const handleSpin = () => {\n    setNumSpins(numSpins - 1);\n    setSnackbarOpen(false);\n  }\n\n  const setNumSpinsOwned = spinsToBuy => {\n    setNumSpins(numSpins + spinsToBuy);\n  }\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar \n        color=\"default\"\n        position=\"relative\">\n        <Toolbar>\n          <Typography \n            variant=\"h5\" \n            component=\"h1\" \n            className={classes.title}\n          >\n            Spin the Wheel\n          </Typography>\n          <Typography variant=\"h5\" component=\"h6\" className={classes.numSpins}>\n              {`${numSpins} Spin${numSpins !== 1 ? 's' : ''} left`}\n          </Typography>\n          <IconButton\n            color=\"primary\"\n            className={classes.button}\n            aria-label=\"Add to shopping cart\"\n            edge=\"end\"\n            onClick={toggleDrawer}\n          >\n            <AddShoppingCartIcon  fontSize=\"small\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paperVert}>\n        <SpinWheel onWinPrize={handleWinPrize} onSpin={handleSpin} enabled={numSpins > 0} />\n      </div>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        TransitionComponent={SnackbarTransition}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">{snackbarMsg}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </Container>\n    <Drawer \n      anchor=\"right\" \n      open={drawerOpen} \n      onClose={closeDrawer}>\n        <BuySpins \n          setNumSpinsOwned={setNumSpinsOwned}\n          closeDrawer={closeDrawer}\n        />\n    </Drawer>\n    </React.Fragment>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; \n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}